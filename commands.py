import configparser
import db
import functions
import requests
import json
import re
import time
from telebot import types, TeleBot
from telebot.types import Message

config = configparser.ConfigParser()
config.read('config.ini')

admin_id = int(config.get('default', 'admin_id'))  # id –∞–¥–º–∏–Ω–∞


# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
def start(message: Message, bot: TeleBot):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    button_data = db.get_buttons(message.chat.id)  # –ü–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫–∏

    if button_data:
        buttons = []
        for i in range(5):
            name = button_data[i * 3]  # –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ –∫–Ω–æ–ø–æ–∫
            if name:
                buttons.append(types.KeyboardButton(name))

        markup.add(*buttons)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id, f"""
–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!
–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞—Ü–∏—è–º–∏.
–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
‚ùî–ü–æ–º–æ—â—å, –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ /start
‚ùóÔ∏è–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏ /errors
üë§–ü—Ä–æ—Ñ–∏–ª—å /me
‚ùáÔ∏è–î–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é /add
‚õîÔ∏è–£–¥–∞–ª–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é /delete
üîç–ü–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é /search
üîÅ–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ WGS84 –≤ –°–ö42
/wgs84_to_sk42
üîÅ–ü–µ—Ä–µ–≤–æ–¥ –∏–∑ –°–ö42 –≤ WGS84
/sk42_to_wgs84
–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–µ–º
–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 5 –ª–æ–∫–∞—Ü–∏–π
""", reply_markup=markup)


# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫
def errors(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, f'''
‚ùóÔ∏è–û–®–ò–ë–ö–ê
–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: –Ω–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º—Ö–µ–∑–∞–Ω–∏–∑–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è EPSG –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∑–æ–Ω—ã –°–ö-42 ( –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–∫–∞ –∑–µ–º–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ )

‚ùî–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
–î–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ ST_Transform() postgis. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Ç–µ—Ä–∏—Ç–æ—Ä–∏–∏ —Å—Ç—Ä–∞–Ω –±—ã–≤—à–µ–≥–æ –°–°–°–† –∏ –ø—Ä–∏–ª–µ–≥–∞—é—â–∏—Ö –æ–±–ª–∞—Å—Ç–µ–π (—Ç–∞–º, –≥–¥–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –°–ö-42) –ù–µ—Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å –¥–µ—Å—è—Ç–∫–∞ –º–µ—Ç—Ä–æ–≤ (–≥–æ—Ä–Ω—ã–µ —Ä–∞–π–æ–Ω—ã), –æ–±—ã—á–Ω–æ –µ–¥–∏–Ω–∏—Ü—ã –º–µ—Ç—Ä–æ–≤.
''')


# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
def me(message: Message, bot: TeleBot):
    text1 = f"üë§Username: @{message.chat.username}\n" if message.chat.username else ""
    text2 = f"‚ñ™Ô∏è–ò–º—è: {message.chat.first_name}\n" if message.chat.first_name else ""
    req = db.get_requests(message.chat.id)
    bot.send_message(message.chat.id, f'''
–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
ü™™ID: {message.chat.id}
{text1}{text2}üå§–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–≥–æ–¥—ã: {req}
''')


# –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
def add_location_command(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏")
    bot.register_next_step_handler(message, process_add_location_name, bot=bot)


# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ª–æ–∫–∞—Ü–∏–∏
def process_add_location_name(message: Message, bot: TeleBot):
    if len(message.text) < 60:
        location_name = message.text
        bot.send_message(message.chat.id, f"""
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ª–æ–∫–∞—Ü–∏–∏
–≤ —Ñ–æ—Ä–º–∞—Ç–µ WGS84 —à–∏—Ä–æ—Ç–∞/–¥–æ–ª–≥–æ—Ç–∞,
–Ω–∞–ø—Ä–∏–º–µ—Ä N: 47.12345¬∞ E: 37.54321¬∞
–∏–ª–∏ –°–ö42, –Ω–∞–ø—Ä–∏–º–µ—Ä X: 654321 Y: 654321
""")
        bot.register_next_step_handler(message, process_add_location, location_name, bot=bot)
    else:
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ (–¥–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–µ –±–æ–ª—å—à–µ 60)")
        bot.register_next_step_handler(message, process_add_location_name, bot=bot)


# –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ª–æ–∫–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É
def process_add_location(message: Message, location_name, bot: TeleBot):
    pattern = r"\d{2,3}\.\d{5,14}"
    numbers = re.findall(pattern, message.text)
    if len(numbers) == 2:
        latitude = round(float(numbers[0]), 6)
        longitude = round(float(numbers[1]), 6)
        result = db.add_location(message.chat.id, location_name, latitude, longitude)
        bot.send_message(message.chat.id, result)
    else:
        answer = functions.sk42_to_wgs84(message.text)
        if isinstance(answer, str):
            bot.send_message(message.chat.id, f"""
{answer}.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë —Ä–∞–∑
–≤ —Ñ–æ—Ä–º–∞—Ç–µ WGS84 —à–∏—Ä–æ—Ç–∞/–¥–æ–ª–≥–æ—Ç–∞,
–Ω–∞–ø—Ä–∏–º–µ—Ä N: 47.12345¬∞ E: 37.54321¬∞
–∏–ª–∏ –°–ö42, –Ω–∞–ø—Ä–∏–º–µ—Ä X: 654321 Y: 654321
""")
            bot.register_next_step_handler(message, process_add_location, location_name, bot=bot)
        else:
            result = db.add_location(message.chat.id, location_name, answer[0], answer[1])
            if result[:9] == "–õ–æ–∫–∞—Ü–∏—è '":
                bot.send_message(message.chat.id,
                                 f"–õ–æ–∫–∞—Ü–∏—è '{location_name}' X: {answer[2]} Y: {answer[3]} –¥–æ–±–∞–≤–ª–µ–Ω–∞. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")
            else:
                bot.send_message(message.chat.id, result)


# –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
def delete_button(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    bot.register_next_step_handler(message, process_delete_button, bot=bot)


# –ü—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
def process_delete_button(message: Message, bot: TeleBot):
    button_name = message.text
    result = db.delete_button_by_name(message.chat.id, button_name)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    button_data = db.get_buttons(message.chat.id)
    if button_data:
        buttons = []
        for i in range(5):
            name = button_data[i * 3]
            if name:
                buttons.append(types.KeyboardButton(name))
        markup.add(*buttons)
    # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞
    if f"–õ–æ–∫–∞—Ü–∏—è '{button_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start" in result:
        markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, result, reply_markup=markup)


# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ª–æ–∫–∞—Ü–∏–∏
def search(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å–∫–æ–º–æ–π –ª–æ–∫–∞—Ü–∏–∏")
    bot.register_next_step_handler(message, request, bot=bot)


# –û—Ç–≤–µ—Ç
def request(message: Message, bot: TeleBot):
    if message.text.isdigit():
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ /search")
    else:
        res = functions.geocoder(message.text)
        print(res)
        if res[0] == 200:
            bot.send_message(message.chat.id, res[1])
        else:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ {res}")
        if message.chat.id != admin_id:
            bot.send_message(admin_id, f'''
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–∏—Å–∫ –ª–æ–∫–∞—Ü–∏–∏ {message.text}
''')


# –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ WGS84 –≤ –°–ö42
def wgs84_to_sk42(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ WGS84, –Ω–∞–ø—Ä–∏–º–µ—Ä 47.54321 37.12345")
    bot.register_next_step_handler(message, answer_sk42, bot=bot)


def answer_sk42(message: Message, bot: TeleBot):
    answer = functions.wgs84_to_sk42(message.text)

    if isinstance(answer, str):
        bot.send_message(message.chat.id, answer)
    else:
        bot.send_message(message.chat.id, f"""
–î–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ WGS84:\nN: {answer[2]}¬∞ E: {answer[3]}¬∞
–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –°–ö42:\nX: {answer[0]} Y: {answer[1]}
""")


# –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ –°–ö42 –≤ WGS84
def sk42_to_wgs84(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –°–ö42, –Ω–∞–ø—Ä–∏–º–µ—Ä X‚ÄØ=‚ÄØ654321  Y‚ÄØ=‚ÄØ7654321")
    bot.register_next_step_handler(message, answer_wgs84, bot=bot)


def answer_wgs84(message: Message, bot: TeleBot):
    answer = functions.sk42_to_wgs84(message.text)
    if isinstance(answer, str):
        bot.send_message(message.chat.id, answer)
    else:
        bot.send_message(message.chat.id, f"""
–î–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –°–ö42:\nX: {answer[2]} Y: {answer[3]}
–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ WGS84:\nN: {answer[0]}¬∞ E: {answer[1]}¬∞
""")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏–∑ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
def get_weather(message: Message, bot: TeleBot):
    location_name = message.text
    latitude = None
    longitude = None
    if message.location:
        latitude = str(message.location.latitude)[:8]
        longitude = str(message.location.longitude)[:8]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤ –±–∞–∑–µ
    button_data = db.get_buttons(message.chat.id)
    if button_data and message.location is None:
        for i in range(1, 6):
            name_column = button_data[i * 3 - 3]
            latitude_column = button_data[i * 3 - 2]
            longitude_column = button_data[i * 3 - 1]

            if name_column == location_name and latitude_column is not None and longitude_column is not None:
                latitude = latitude_column
                longitude = longitude_column
                break

    if latitude is not None and longitude is not None:
        new_requests = db.get_requests(message.chat.id) + 1
        db.update_requests(message.chat.id, new_requests)
        url_open_meteo = f"https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&current=temperature_2m,surface_pressure,wind_speed_10m,wind_direction_10m,wind_gusts_10m&wind_speed_unit=ms&timezone=Europe%2FMoscow"
        req_opmt = requests.get(url=url_open_meteo)

        if req_opmt.status_code == 200:
            data_req_opmt = json.loads(req_opmt.text)
            wind_60 = round(data_req_opmt["current"]["wind_direction_10m"] / 6, 2)
            wind_60 = '{:.2f}'.format(wind_60).replace('.', '-')
            bot.send_message(message.chat.id, f'''
–ü–æ –¥–∞–Ω–Ω—ã–º –ø–æ–≥–æ–¥—ã –≤ {location_name}:
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {data_req_opmt["current"]["temperature_2m"]} ¬∞–°
–î–∞–≤–ª–µ–Ω–∏–µ {int(round((data_req_opmt["current"]["surface_pressure"] * 0.75), 0))} –º–º —Ä—Ç. —Å—Ç.
–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {data_req_opmt["current"]["wind_direction_10m"]}¬∞ ({wind_60})
–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {round(data_req_opmt["current"]["wind_speed_10m"], 1)} –º/—Å 
–ü–æ—Ä—ã–≤—ã –≤–µ—Ç—Ä–∞ {round(data_req_opmt["current"]["wind_gusts_10m"], 1)} –º/—Å
''')

        elif req_opmt.status_code != 200:
            bot.send_message(admin_id,
                             f'–ü—Ä–æ–±–ª–µ–º–∞ —Å API —É @{message.chat.username} {message.chat.first_name} {message.chat.last_name}\nCode: {req_opmt.status_code}')
            bot.send_message(message.chat.id, "–ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å –±–æ—Ç–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")

        with open(r'log.txt', mode='a') as log:
            log.write(
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–≥–æ–¥—É –≤ {location_name}\n')
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤—å—Ç–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add')
