import configparser
import db
import functions
import requests
import json
import re
import time
from telebot import types, TeleBot
from telebot.types import Message

config = configparser.ConfigParser()
config.read('config.ini')

token_openweathermap = config.get('default','token_openweathermap') # API —Ç–æ–∫–µ–Ω OpenWeatherMap
admin_id = int(config.get('default','admin_id')) # id –∞–¥–º–∏–Ω–∞

# –Ø–Ω–¥–µ–∫—Å API —Ç–æ–∫–µ–Ω—ã
token_yandex_list = []
for key in config['token_yandex']:
    token_value = config['token_yandex'][key]
    token_yandex_list.append({'X-Yandex-API-Key': token_value})

code_to_smile = {
    "clear": "–Ø—Å–Ω–æ ‚òÄÔ∏è",
    "partly-cloudy": "–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ üå§",
    "overcast": "–ü–∞—Å–º—É—Ä–Ω–æ ‚òÅÔ∏è",
    "light-rain": "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üå¶",
    "cloudy": "–û–±–ª–∞—á–Ω–æ üå•",
    "rain": "–î–æ–∂–¥—å üåß",
    "moderate-rain": "–£–º–µ—Ä–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π –∂–æ–∂–¥—å üåß",
    "heavy-rain": "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß",
    "drizzle": "–î–æ–∂–¥—å üåß",
    "showers": "–õ–∏–≤–µ–Ω—å üåß",
    "continuous-heavy-rain": "–î–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß",
    "wet-snow": "–°–Ω–µ–≥ —Å –¥–æ–∂–¥–µ–º üå®",
    "snow": "–°–Ω–µ–≥ üå®",
    "light-snow": "–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
    "snow-showers": "–°–Ω–µ–≥–æ–ø–∞–¥ üå®",
    "hail": "–ì—Ä–∞–¥ üåß",
    "thunderstorm": "–ì—Ä–æ–∑–∞ üå©",
    "thunderstorm-with-rain": "–î–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà",
    "thunderstorm-with-hail": "–ì—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º ‚õà",
}

# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
def start(message: Message, bot: TeleBot):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    button_data = db.get_buttons(message.chat.id)  # –ü–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
    db.update_user_data(message.chat.id, message.chat.username, message.chat.first_name, message.chat.last_name)

    if button_data:
        buttons = []
        for i in range(5):
            name = button_data[i * 3]  # –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ –∫–Ω–æ–ø–æ–∫
            if name:
                buttons.append(types.KeyboardButton(name))

        markup.add(*buttons)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id, f"""
–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–µ–º
–ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é
–∫–æ–º–∞–Ω–¥–æ–π  /add
–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 5 –ª–æ–∫–∞—Ü–∏–π
–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é
–∫–æ–º–∞–Ω–¥–æ–π  /delete
""", reply_markup=markup)
    # –ó–∞–º–µ–Ω–∞ None –≤ userdata –Ω–∞ ""
    message.chat.username = message.chat.username if message.chat.username else ""
    message.chat.first_name = message.chat.first_name if message.chat.first_name else ""
    message.chat.last_name = message.chat.last_name if message.chat.last_name else ""
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    if message.chat.id != admin_id:
        bot.send_message(admin_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
def me(message: Message, bot: TeleBot):
    db.update_user_data(message.chat.id, message.chat.username, message.chat.first_name,  message.chat.last_name)
    if message.chat.username == None:
        text1 = ""
        message.chat.username = ""
    else:
        text1 = f"üë§Username: @{message.chat.username}\n"
    if message.chat.first_name == None:
        text2 = ""
        message.chat.first_name = ""
    else:
        text2 = f"‚ñ™Ô∏è–ò–º—è: {message.chat.first_name}\n"
    req = db.get_requests(message.chat.id)
    bot.send_message(message.chat.id, f'''
–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
ü™™ID: {message.chat.id}
{text1}{text2}üå§–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–≥–æ–¥—ã: {req}
''')
    if message.chat.last_name == None:
        message.chat.last_name = ""
    if message.chat.id != admin_id:
        bot.send_message(admin_id, f'''
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–æ—Ñ–∏–ª—å
''')

# –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
def add_location_command(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏")
    bot.register_next_step_handler(message, process_add_location_name, bot=bot)
# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ª–æ–∫–∞—Ü–∏–∏
def process_add_location_name(message: Message, bot: TeleBot):
    location_name = message.text
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —à–∏—Ä–æ—Ç—É –ª–æ–∫–∞—Ü–∏–∏\n(–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ WGS84 –≥—Ä–∞–¥—É—Å—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä 47.12345)")
    bot.register_next_step_handler(message, process_add_location_latitude, location_name, bot=bot)
# –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ª–æ–∫–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É
def process_add_location_latitude(message: Message, location_name, bot: TeleBot):
    latitude_input = message.text
    if re.match(r'^\d{2}\.\d+$', latitude_input):
        latitude = float(latitude_input)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–ª–≥–æ—Ç—É –ª–æ–∫–∞—Ü–∏–∏\n(–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ WGS84 –≥—Ä–∞–¥—É—Å—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä 37.54321)")
        bot.register_next_step_handler(message, process_add_location_longitude, location_name, latitude, bot=bot)
    else:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —à–∏—Ä–æ—Ç—ã\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë —Ä–∞–∑\n(–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ WGS84 –≥—Ä–∞–¥—É—Å—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä 47.12345)")
        bot.register_next_step_handler(message, process_add_location_latitude, location_name, bot=bot)

def process_add_location_longitude(message: Message, location_name, latitude, bot: TeleBot):
    longitude_input = message.text
    if re.match(r'^\d{2}\.\d+$', longitude_input):
        longitude = float(longitude_input)
        result = db.add_location(message.chat.id, location_name, latitude, longitude)
        bot.send_message(message.chat.id, result)
    else:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–ª–≥–æ—Ç—ã\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë —Ä–∞–∑\n(–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ WGS84 –≥—Ä–∞–¥—É—Å—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä 37.54321)")
        bot.register_next_step_handler(message, process_add_location_longitude, location_name, latitude, bot=bot)

# –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
def delete_button(message: Message, bot: TeleBot):
    db.update_user_data(message.chat.id, message.chat.username, message.chat.first_name, message.chat.last_name)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    bot.register_next_step_handler(message, process_delete_button, bot=bot)
# –ü—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
def process_delete_button(message: Message, bot: TeleBot):
    button_name = message.text
    result = db.delete_button_by_name(message.chat.id, button_name)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    button_data = db.get_buttons(message.chat.id)
    if button_data:
        buttons = []
        for i in range(5):
            name = button_data[i * 3]
            if name:
                buttons.append(types.KeyboardButton(name))
        markup.add(*buttons)  
# –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞
    if f"–õ–æ–∫–∞—Ü–∏—è '{button_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start" in result:
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, result, reply_markup=markup)
    else:
        bot.send_message(message.chat.id, result, reply_markup=markup)

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ª–æ–∫–∞—Ü–∏–∏
def search(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å–∫–æ–º–æ–π –ª–æ–∫–∞—Ü–∏–∏")
    bot.register_next_step_handler(message, request, bot=bot)
# –û—Ç–≤–µ—Ç
def request(message: Message, bot: TeleBot):
    try:
        int(message.text)
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ /search")
    except ValueError:
        res = functions.geocoder(message.text)
        if res[0] == 200:
            sent_message = bot.send_message(message.chat.id, res[1])
        else:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ {res}")
            
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏–∑ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
def get_weather(message: Message, bot: TeleBot):
    db.update_user_data(message.chat.id, message.chat.username, message.chat.first_name, message.chat.last_name)
    message.chat.username = message.chat.username if message.chat.username else ""
    message.chat.first_name = message.chat.first_name if message.chat.first_name else ""
    message.chat.last_name = message.chat.last_name if message.chat.last_name else ""
    location_name = message.text
    latitude = None
    longitude = None
    if message.location:
         latitude = str(message.location.latitude)[:8]
         longitude = str(message.location.longitude)[:8]
         
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤ –±–∞–∑–µ
    button_data = db.get_buttons(message.chat.id)
    if button_data and message.location is None:
        for i in range(1, 6):
            name_column = button_data[i * 3 - 3]
            latitude_column = button_data[i * 3 - 2]
            longitude_column = button_data[i * 3 - 1]

            if name_column == location_name and latitude_column is not None and longitude_column is not None:
                latitude = latitude_column
                longitude = longitude_column
                break
                
    if latitude is not None and longitude is not None:
        new_requests = db.get_requests(message.chat.id) + 1
        db.update_requests(message.chat.id, new_requests)
        url_yandex = f'https://api.weather.yandex.ru/v2/informers?lat={latitude}&lon={longitude}&lang=ru_RU'
        url_openweathermap = f'https://api.openweathermap.org/data/2.5/weather?lat={latitude}&lon={longitude}&appid={token_openweathermap}&exclude=current&units=metric'
        req_opwth = requests.get(url=url_openweathermap)
        if message.chat.id != admin_id:
            bot.send_message(admin_id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–≥–æ–¥—É –≤ {location_name}')
        for token in token_yandex_list:
            req_yan = requests.get(url=url_yandex, headers=token)
            if req_yan.status_code == 200 and req_opwth.status_code == 200:
                data_req_yan = json.loads(req_yan.text)
                data_req_opwth = json.loads(req_opwth.text)
                fact = data_req_yan["fact"]
                if fact["condition"] in code_to_smile:
                    wd = code_to_smile[fact["condition"]]
                    wd = wd.lower()
                else:
                    wd = "–¢–≤–æ—Ä–∏—Ç—Å—è —á—Ç–æ-—Ç–æ —Å—Ç—Ä–∞—à–Ω–æ–µ!!!"
                wind_60 = round(data_req_opwth["wind"]["deg"] / 6, 2)
                wind_60 = '{:.2f}'.format(wind_60).replace('.', '-')
                bot.send_message(message.chat.id, f'''
–ü–æ –¥–∞–Ω–Ω—ã–º –Ø–Ω–¥–µ–∫—Å –ü–æ–≥–æ–¥—ã 
–≤ {location_name} {wd}
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {fact["temp"]}¬∞–°
–î–∞–≤–ª–µ–Ω–∏–µ {fact["pressure_mm"]} –º–º —Ä—Ç. —Å—Ç.
–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {data_req_opwth["wind"]["deg"]}¬∞ ({wind_60})
–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {fact["wind_speed"]} –º/—Å 
''')
                break
            elif req_yan.status_code != 200:
                bot.send_message(admin_id, f'–ü—Ä–æ–±–ª–µ–º–∞ —Å API —É @{message.chat.username} {message.chat.first_name} {message.chat.last_name}\nYandex code: {req_yan.status_code}\nWeather code: {req_opwth.status_code}\n–ü–æ–¥–∫–ª—é—á–∞—é –∑–∞–ø–∞—Å–Ω–æ–π –∫–ª—é—á API..')

        if req_yan.status_code != 200:
            bot.send_message(admin_id, "–í—Å—ë —Ç—Ä—ã–Ω–¥–µ—Ü")
            bot.send_message(message.chat.id, "–ù–µ–ø–æ–ª–∞–¥–∫–∏ —Å –±–æ—Ç–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
        
        with open(r'log.txt', mode='a') as log:
            log.write(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–≥–æ–¥—É –≤ {location_name}\n')
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ—Ç')
        if message.chat.id != admin_id:
            bot.send_message(admin_id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.chat.username} {message.chat.first_name} {message.chat.last_name} –Ω–∞–ø–∏—Å–∞–ª –≤ –±–æ—Ç {message.text}')
            